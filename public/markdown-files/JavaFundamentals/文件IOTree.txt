文件/IO
	File
		Java中处理文件和文件夹的类
		只能对文件本身进行操作，内容读写使用IO流操作
		创建
			构造方法：File(String filepath)
			路径
				盘符
					windows：字母 + 冒号，例如"C:"
					Linux：无盘符，使用挂载点，以`/`开头
				分隔符
					\\
					/
					File.separator
						String.join(File.separator, "root", "data", "file.txt");
				相对路径
					./表示当前目录，可省略
						./Documents/file.txt
						Documents/file.txt
					../表示上级目录
						../Documents/file.txt 等价于 username/Documents/file.txt
				绝对路径
					windows：C:\\Users\\username\\Documents\\file.txt
					Linux：/home/username/Documents/file.txt
		API
			路径获取
				获得绝对路径
					file.getAbsolutePath()
				获得父目录路径
					file.getParent()
				获得文件名包括后缀名
					file.getName()
			获得父目录文件对象
				file.getParentFile()
			判断File对象
				是否存在
					file.exists()
				是否是目录
					file.isDirectory()
				是否是文件
					file.isFile()
			获得文件长度，以字节为单位
				file.length()
			File对象修改操作
				文件
					File file = new File("./Documents/file.txt")
					创建
						boolean file.createNewFile()
							为true，创建成功
							为false，文件已存在，创建失败
							文件不存在抛出IOException
					删除
						boolean file.delete()
							为true，删除成功
							为false。文件不存在，删除失败
					重命名
						File newFile = newFile("./Documents/file2.txt")
						boolean file.renameTo(newFile)
							为true，重命名成功
							为false，重命名失败
				目录
					File folder = new File("./Documents/folder")
					创建
						创建单层目录
							boolean folder.mkdir()
						创建多层目录
							boolean folder.mkdirs()
					删除
						boolean delete()
							只能删除空的目录
					重命名
						同文件
			遍历
				返回目录中子文件、子目录的文件名数组
					String[] file.list()
				返回目录中子文件、子目录的File对象数组
					File[] listFiles()
				函数式接口-过滤器
					FilenameFilter
						文件名过滤器
							方法签名
					FileFilter
						文件过滤器
							方法签名
				递归遍历
					方法内部去调用自身方法，实现嵌套调用
					递归必须有终止条件，否则死循环#栈溢出
	I/O 流
		概述
			i - input 输入
			i - output 输出
			stream  流
			用于数据的传输
		体系划分
			传输方向
				输入流 InputStream
				输出流 OutputStream
			传输单位
				字节流 以字节为单位传输
				字符流 以字符为单位传输
			传输方式
				原始流/节点流 每次传输1字节/1字符
					 传输效率低
				处理流 加工处理 原始流/节点流
					传输效率高
		基类
			InputStream：字节输入流
			OutputStream：字节输出流
			Reader：字符输入流
			Writer：字符输出流
		文件流
			类的划分
				FileInputStream：文件字节输入流
				FileOutputStream：文件字节输出流
				FileReader：文件字符输入流
				FileWriter：文件字符输出流
					用于文件写入
					第二个参数为true，追加写入
					文件不存在自动创建
			文件流属于节点流
			基本操作流程
				1. 创建流
				2. 数据的读/写
				3. 关闭流
	NIO.2
		│   ├── Path (接口)
│   ├── Paths (工具类)
│   └── Files (终极工具类)
│
├── 2. 基础语法与常用操作
│   ├── 获取 Path 对象
│   ├── 文件/目录检查
│   ├── 创建文件/目录
│   ├── 删除文件/目录
│   ├── 复制文件/目录
│   ├── 移动/重命名文件/目录
│   ├── 读取文件内容
│   ├── 写入文件内容
│   └── 遍历目录 (简单)
│
├── 3. 高级特性
│   ├── 遍历目录树 (FileVisitor)
│   ├── 目录监控 (WatchService)
│   ├── 文件属性视图 (Attribute Views)
│   │   ├── BasicFileAttributeView (基础属性)
│   │   ├── PosixFileAttributeView (Unix/linux权限)
│   │   └── DosFileAttributeView (Windows属性)
│   ├── 文件通配符匹配 (PathMatcher & Glob)
│   └── 异步通道 (AsynchronousFileChannel)
│
└── 4. 杂项
    └── 工具方法
        ├── 获取文件MIME类型 (probeContentType)
        ├── 创建临时文件/目录
        └── 文件比较 (isSameFile)