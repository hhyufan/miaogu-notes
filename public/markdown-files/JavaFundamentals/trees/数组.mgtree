相关概念
数组
  java中数组用来存放一组相同数据类型的数据
  数组使用大括号表示，比如{1, 3, 5}, {"aaa", "bbb"}
  数组属于引用类型
元素
  数组存放的数据成为数组元素
  数组元素可以为任意类型
数组长度
  数组的元素个数
  数组一旦创建成功，长度不可变
索引/下标
  元素在数组中的位置
  java下标从0开始
数组的创建
静态创建
  int[] arr = {1, 2, 3}; >java[1]
动态创建
  int[] arr = new int[3]; >java++
数组的使用
获取数据长度：arr.length >java++
获取下标获得元素
  arr[index] >java++
  下标取值范围：0 ~ len -1
  ArrayIndexOutOfBoundsException：数组下标越界异常 >java++
数组循环/遍历
  下标循环遍历
  for(int i = 0; i < arr.length; ++i) {} >java++
  增强for循环
  for (int element: arr) {} >java++
数组的数据结构
栈和堆
  栈：内存可以自动回收（例如：变量）
  堆：内存不会自动回收，但可以手动回收（例如：引用类型）
  引用类型的变量没有实例化（null），会报空指针异常（NullPointerException） >java++
数组的内存
  数组元素的内存地址是连续的
  数组初始默认指向第一个元素的内存地址
  优点：数组查询的速度快。为O(1)
数组的排序与查找
数组排序
  冒泡排序：从首位元素开始，分别和后续元素进行比较，将最小的移动到首位 >java++
  选择排序：从首位元素开始，分别和后续元素进行比较，记录最小的索引位置。选择最小索引位置到首位 >java++
  插入排序：从最后一个元素开始，找到插入位置。 >java++
  Java API：Arrays.sort(数组) >java++
数组查找
  顺序查找：使用for循环对数组进行遍历，依次和要寻找的元素判断内容相等，然后退出循环。 >java++
  二分查找：对于有序数组，找到元素中间位置进行反复的二分，以找到最终元素。退出循环（Array.binarySerach(arr.num);) >java++
二维数组
定义：一维数组的每一个元素又是一个数组的数组
创建
  静态创建：int[][] arr = {{0, 1},{0. 2}}; >java++
  动态创建：int[][] arr = new int[3][3]; >java++
长度
  行数：arr.length >java++
  列数：arr[i].length >java
获得指定下标元素 `arr[i][j]` >java++
循环遍历需要二层循环 >java++
