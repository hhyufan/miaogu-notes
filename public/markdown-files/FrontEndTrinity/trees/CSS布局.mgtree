浮动`float`
  浮动的元素脱离文档流
  浮动方向
    `left`左浮动
    `right`右浮动
  浮动停止
    碰到父级元素的上边界
    碰到同方向的浮动元素
  浮动相关问题
    如果子元素有浮动属性，父元素没有，则父元素高度丢失
    解决方案
      1. 在父元素内最后位置添加任意子元素，并设置为clear:both
      2. 给父元素增加overflow: hidden
  浮动清除
    如果元素`清除浮动`则视为该方向没有其他浮动元素
定位`position`
  定位方式
    1.相对定位
      `relative`
      参考点：`原有位置`
      位置是否保留：`保留`
    2.绝对定位
      `absolute`
      参考点：有`定位属性的` `距离最近的` `父元素`
      位置是否保留：`不保留`
    3.固定定位
      `fixed`
      参考点：`浏览器`
      位置是否保留：`不保留`
    `相对定位``绝对定位``固定定位`偏移后`盖住`其他元素
  偏移量：`top`、`right`、`left`、`right`
  z-index
    z轴叠加顺序
    只有具有定位属性的元素有效
    默认为`0`，越大越靠前，默认为`负数`
弹性`flex`
  弹性布局`flex`，又称`响应式布局`，`CSS3`新增，布局内容可以根据`窗口`或`设备`实现`自适配`，弹性布局由`弹性容器`和`弹性子元素`组成
  弹性容器
    设置显示方式`display`为弹性容器
      块级元素`flex`
        未指定宽度：宽度充满父容器
        指定内容小于内容宽度：内容自适配
      行内块级元素`inline-flex`
        未指定宽度：宽度根据子元素自适配
        指定内容小于内容宽度：内容自适配
    `flex-dirction`弹性子元素的排列方式
      `row`：水平排列，默认
      `column`：垂直排列
      `row-reverse`：水平排序，子元素反转
      `column-reverse`：垂直排序，子元素反转
    `flex-wrap`子元素是否换行
      `nowrap`：不换行
      `wrap`：换行
    `flex-flow`：同时设置排列方式和是否换行
      `flex-dirction flex-wrap`
    `justify-content`：子元素在主轴方向的对齐方式
      `flex-start`：默认值，项目位于容器开头
      `flex-end`：项目位于容器结尾
      `center`：项目位于容器中间
      `space-between`：项目两边对齐
      `space-around`：项目两边对齐，但各行前后留空
    `align-item`：子元素在垂直轴方向的对齐方式
      `stretch`: 默认值。项目被拉伸以适应容器
      `center`：项目位于容器中心
      `flex-start`：默认值，项目位于容器开头
      `flex-end`：项目位于容器结尾
      `baseline`：项目位于容器的基线上
  弹性子元素
    `order` 子元素的排序顺序：值`越小`越`靠前`，可以为`负数`，默认为`0`
    `flex-grow`：设置元素的拉伸比率，默认是`0`
    `flex-shrink`：设置子元素的收缩比率，默认是`1`
    `flex-basis`：设置`伸缩基数`，如果宽度`未指定`，基数代表`子元素`的`宽度`
    `flex`：同时设置`grow`、`shrink`、`basis`
    `align-self`：
      覆盖容器的`align-items` 属性
      `stretch`: 默认值。项目被拉伸以适应容器
      `center`：项目位于容器中心
      `flex-start`：默认值，项目位于容器开头
      `flex-end`：项目位于容器结尾
      `baseline`：项目位于容器的基线上